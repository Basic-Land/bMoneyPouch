plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.0'
}

group = 'bMoneyPouch'
version = '4.0'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

def ossRhUser = "dev"
def ossRhPass = "rtVXgxFyWkiVfU3"

repositories {
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
    maven {
        url = uri("http://nexus.basicland.cz:8081/repository/dev-private/")
        allowInsecureProtocol = true
        credentials {
            username = ossRhUser
            password = ossRhPass
        }
    }
    maven {
        url = uri("http://nexus.basicland.cz:8081/repository/dev-snapshots/")
        allowInsecureProtocol = true
        credentials {
            username = ossRhUser
            password = ossRhPass
        }
    }
    maven {
        url "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = uri("https://jitpack.io")
    }
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    // Plugin Hooks
    compileOnly("com.github.MilkBowl:VaultAPI:1.7") {
        exclude group: 'org.bukkit', module: 'bukkit'
    }

    compileOnly 'org.jetbrains:annotations:23.0.0'
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor "org.projectlombok:lombok:1.18.36"
    compileOnly ("cz.basicland:bLibs:2.1.0-SNAPSHOT") {
        changing = true
    }
}

jar {
    from {
        for (File file : new File("archive").listFiles()) {
            zipTree(file)
        }
    }
}

processResources {
    outputs.upToDateWhen { false }
    eachFile { details ->
        if (details.name.contentEquals('plugin.yml')) {
            filter { line ->
                line.replace('${project.version}', version)
            }
        }
    }
}

shadowJar {
    delete fileTree('./target/') {
        exclude archiveFileName.get()
    }
    dependsOn(jar)
    archiveClassifier.set('')
    destinationDirectory = file("./target/")
}

build {
    dependsOn shadowJar
}
